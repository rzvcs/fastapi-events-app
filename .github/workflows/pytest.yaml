on: [push]

jobs:
  pytest:
    runs-on: ubuntu-latest
    name: Run pytest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-all.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=myapp myapp/tests/ --cov-report=term --cov-report=xml > result.log || exit 0
          cat result.log

      - name: Comment on PR or Commit
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('result.log', 'utf8');
            const commentBody = `### Test Results\n\`\`\`\n${log}\n\`\`\``;

            let issue_number = undefined;

            if (context.eventName === 'pull_request') {
              issue_number = context.payload.pull_request.number;
            } else if (context.eventName === 'push') {
              // Because the PR number is not part of the push event, need to get the PR number in a different way
              const branch = context.ref.replace('refs/heads/', '');
              const pulls = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                head: `${context.repo.owner}:${branch}`
              });

              if (pulls.data.length > 0) {
                // Assuming there is only one PR for a branch at a time
                const prNumber = pulls.data[0].number;
                issue_number = prNumber;
                console.log(`Pull Request Number: ${prNumber}`);
              } else {
                console.log('No open pull requests for this branch');
              }
            }

            if (issue_number !== undefined) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: commentBody
              });
            }
